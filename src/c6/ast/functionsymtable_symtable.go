// Generated by: main
// TypeWriter: symtable
// Directive: +gen on FunctionSymTable

package ast

// SymTableWriter is a modification of https://github.com/deckarep/golang-set
// The MIT License (MIT)
// Copyright (c) 2015 Yo-An Lin (yoanlin93@gmail.com)

func NewFunctionSymTable() *FunctionSymTable {
	return &FunctionSymTable{}
}

func (self FunctionSymTable) Set(name string, v *Function) {
	self[name] = v
}

func (self FunctionSymTable) Get(name string) (*Function, bool) {
	if val, ok := self[name]; ok {
		return val, true
	}
	return nil, false
}

func (self FunctionSymTable) Merge(a *FunctionSymTable) {
	for key, val := range *a {
		self[key] = val
	}
}

func (self FunctionSymTable) Has(name string) bool {
	if _, ok := self[name]; ok {
		return true
	} else {
		return false
	}
}
